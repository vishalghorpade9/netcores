@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<h1>Messages for @TempData["ClientName"]</h1>

<div class="row p-1">
    <div class="col-6">
        <ul id="messagesList"></ul>
    </div>
</div>


<script src="~/lib/microsoft-signalr/signalr.min.js"></script>

<script type="text/javascript">
        "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    //Disable the send button until connection is established.
    // document.getElementById("sendButton").disabled = true;

    connection.on("@TempData["ClientName"]", function (user, message) {
        var li = document.createElement("li");
        document.getElementById("messagesList").appendChild(li);
        // We can assign user-supplied strings to an element's textContent because it
        // is not interpreted as markup. If you're assigning in any other way, you
        // should be aware of possible script injection concerns.
        li.textContent = `${user} says ${message}`;
    });

    connection.start().then(function () {
        // document.getElementById("sendButton").disabled = false;
        // console.log("on connection "+connection.q.connection.connectionid);
        console.log(connection["connection"].connectionId);
    }).catch(function (err) {
        return console.error(err.toString());
    });

    // document.getElementById("sendButton").addEventListener("click", function (event) {
    //     var user = document.getElementById("userInput").value;
    //     var message = document.getElementById("messageInput").value;
    //     connection.invoke("SendMessage", user, message).catch(function (err) {
    //         return console.error(err.toString());
    //     });
    //     event.preventDefault();
    // });

</script>